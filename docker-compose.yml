version: '3.8'
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      SOCKET_IO_PORT: ${SOCKET_IO_PORT}
      SERVICE1_SPECIFIC_ENV: ${SERVICE1_SPECIFIC_ENV}
      PORT: ${PORT}
      DATABASE_URL: ${DATABASE_URL}
      DTABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      GOOGLE_ID: ${GOOGLE_ID}
      GOOGLE_SECRET: ${GOOGLE_SECRET}
      USER: ${USER}
      PASS: ${PASS}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      REMOTE_PRIVATE_KEY: ${REMOTE_PRIVATE_KEY}
      EC2_HOST: ${EC2_HOST}
      EC2_USERNAME: ${EC2_USERNAME}
  image: "${steps.login-ecr.outputs.registry}/trello:latest"
  service2:
    build:
      context: .
      dockerfile: Dockerfile.socket
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    image: "${steps.login-ecr.outputs.registry}/trello:latest"
